<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

/*
 * This file is part of the `iam` project.
 *
 * (c) Aula de Software Libre de la UCO <aulasoftwarelibre@uco.es>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AulaSoftwareLibre\Iam\Application\User\Command;

final class RegisterUser extends \Prooph\Common\Messaging\Command
{
    use \Prooph\Common\Messaging\PayloadTrait;

    protected $messageName = 'AulaSoftwareLibre\Iam\Application\User\Command\RegisterUser';

    public function userId(): \AulaSoftwareLibre\Iam\Domain\User\Model\UserId
    {
        return \AulaSoftwareLibre\Iam\Domain\User\Model\UserId::fromString($this->payload['userId']);
    }

    public function username(): \AulaSoftwareLibre\Iam\Domain\User\Model\Username
    {
        return \AulaSoftwareLibre\Iam\Domain\User\Model\Username::fromString($this->payload['username']);
    }

    public function email(): \AulaSoftwareLibre\Iam\Domain\User\Model\Email
    {
        return \AulaSoftwareLibre\Iam\Domain\User\Model\Email::fromString($this->payload['email']);
    }

    public static function with(\AulaSoftwareLibre\Iam\Domain\User\Model\UserId $userId, \AulaSoftwareLibre\Iam\Domain\User\Model\Username $username, \AulaSoftwareLibre\Iam\Domain\User\Model\Email $email): RegisterUser
    {
        return new self([
            'userId' => $userId->toString(),
            'username' => $username->toString(),
            'email' => $email->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['userId']) || !\is_string($payload['userId'])) {
            throw new \InvalidArgumentException("Key 'userId' is missing in payload or is not a string");
        }

        if (!isset($payload['username']) || !\is_string($payload['username'])) {
            throw new \InvalidArgumentException("Key 'username' is missing in payload or is not a string");
        }

        if (!isset($payload['email']) || !\is_string($payload['email'])) {
            throw new \InvalidArgumentException("Key 'email' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
