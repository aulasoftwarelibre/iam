<?php

// this file is auto-generated by prolic/fpp
// don't edit this file manually

declare(strict_types=1);

/*
 * This file is part of the `iam` project.
 *
 * (c) Aula de Software Libre de la UCO <aulasoftwarelibre@uco.es>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AulaSoftwareLibre\Iam\Domain\User\Event;

final class UserWasDemoted extends \Prooph\EventSourcing\AggregateChanged
{
    public const MESSAGE_NAME = 'AulaSoftwareLibre\Iam\Domain\User\Event\UserWasDemoted';

    protected $messageName = self::MESSAGE_NAME;

    protected $payload = [];

    private $userId;
    private $roleId;

    public function userId(): \AulaSoftwareLibre\Iam\Domain\User\Model\UserId
    {
        if (null === $this->userId) {
            $this->userId = \AulaSoftwareLibre\Iam\Domain\User\Model\UserId::fromString($this->aggregateId());
        }

        return $this->userId;
    }

    public function roleId(): \AulaSoftwareLibre\Iam\Domain\Role\Model\RoleId
    {
        if (null === $this->roleId) {
            $this->roleId = \AulaSoftwareLibre\Iam\Domain\Role\Model\RoleId::fromString($this->payload['roleId']);
        }

        return $this->roleId;
    }

    public static function with(\AulaSoftwareLibre\Iam\Domain\User\Model\UserId $userId, \AulaSoftwareLibre\Iam\Domain\Role\Model\RoleId $roleId): UserWasDemoted
    {
        return new self($userId->toString(), [
            'roleId' => $roleId->toString(),
        ]);
    }

    protected function setPayload(array $payload): void
    {
        if (!isset($payload['roleId']) || !\is_string($payload['roleId'])) {
            throw new \InvalidArgumentException("Key 'roleId' is missing in payload or is not a string");
        }

        $this->payload = $payload;
    }
}
